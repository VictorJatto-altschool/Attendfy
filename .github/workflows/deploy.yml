name: Deploy to GitHub Pages (gh-pages)

on:
  push:
    branches:
      - gh-pages
  workflow_dispatch: {}

permissions:
  contents: read

concurrency:
  group: pages
  cancel-in-progress: true

jobs:
  deploy:
    permissions:
      contents: read
      pages: write
      id-token: write
    environment:
      name: github-pages
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: gh-pages

      - name: Setup Pages
        uses: actions/configure-pages@v5

      - name: Create Firebase config.js from secrets
        shell: bash
        env:
          FIREBASE_ENABLED: "true"
          FIREBASE_API_KEY: ${{ secrets.FIREBASE_API_KEY }}
          FIREBASE_AUTH_DOMAIN: ${{ secrets.FIREBASE_AUTH_DOMAIN }}
          FIREBASE_PROJECT_ID: ${{ secrets.FIREBASE_PROJECT_ID }}
          FIREBASE_STORAGE_BUCKET: ${{ secrets.FIREBASE_STORAGE_BUCKET }}
          FIREBASE_MESSAGING_SENDER_ID: ${{ secrets.FIREBASE_MESSAGING_SENDER_ID }}
          FIREBASE_APP_ID: ${{ secrets.FIREBASE_APP_ID }}
        run: |
          echo "Secrets present (no values shown): API_KEY=$([ -n "${FIREBASE_API_KEY}" ] && echo yes || echo no), AUTH_DOMAIN=$([ -n "${FIREBASE_AUTH_DOMAIN}" ] && echo yes || echo no), PROJECT_ID=$([ -n "${FIREBASE_PROJECT_ID}" ] && echo yes || echo no), APP_ID=$([ -n "${FIREBASE_APP_ID}" ] && echo yes || echo no), STORAGE_BUCKET=$([ -n "${FIREBASE_STORAGE_BUCKET}" ] && echo yes || echo no), MSG_SENDER=$([ -n "${FIREBASE_MESSAGING_SENDER_ID}" ] && echo yes || echo no)"
          # Minimal required for Firebase App/Auth/Firestore: API_KEY, AUTH_DOMAIN, PROJECT_ID, APP_ID
          if [ -n "${FIREBASE_API_KEY}" ] && [ -n "${FIREBASE_AUTH_DOMAIN}" ] && [ -n "${FIREBASE_PROJECT_ID}" ] && [ -n "${FIREBASE_APP_ID}" ]; then
            cat > config.js << EOF
            window.firebaseConfig = {
              enabled: true,
              apiKey: "${FIREBASE_API_KEY}",
              authDomain: "${FIREBASE_AUTH_DOMAIN}",
              projectId: "${FIREBASE_PROJECT_ID}",
              storageBucket: "${FIREBASE_STORAGE_BUCKET}",
              messagingSenderId: "${FIREBASE_MESSAGING_SENDER_ID}",
              appId: "${FIREBASE_APP_ID}",
            };
            EOF
          else
            echo "Firebase secrets not fully set. Generating disabled config.js so site deploys in local-only mode."
            cat > config.js << 'EOF'
            window.firebaseConfig = {
              enabled: false
            };
            EOF
          fi

      - name: Cache-bust config.js reference
        if: always()
        shell: bash
        run: |
          # Replace any existing config.js script tag with a versioned one to avoid CDN/browser cache issues
          sed -i -E 's|<script src="config\.js[^"]*"></script>|<script src="config.js?v=${{ github.run_number }}"></script>|g' index.html || true

      - name: Sanity check config.js
        shell: bash
        run: |
          test -f config.js || { echo "config.js missing"; exit 1; }
          grep -q "window.firebaseConfig" config.js || { echo "config.js malformed"; echo "---"; cat config.js; exit 1; }
          test -f index.html || { echo "index.html missing at repo root"; ls -la; exit 1; }

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./
          if-no-files-found: error

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
